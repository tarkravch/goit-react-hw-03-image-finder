{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","images-api.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","console","log","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","webformatURL","largeImageURL","clickOnImage","src","alt","srcset","onClick","ImageGallery","images","openModal","map","Button","loadMore","axios","defaults","baseURL","searchQuery","currentPage","get","then","response","data","hits","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","event","target","window","addEventListener","removeEventListener","createPortal","children","App","isLoading","showModal","error","selectedImage","toggleModal","choseModalPic","largePicture","onChangeQuery","fetchImages","options","imagesApi","prevState","catch","finally","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","color","height","width","timeout","length","defaultProps","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb81b75a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../Searchbar/Searchbar.scss\";\r\n\r\nclass Searchbar extends Component {\r\n  state = { query: \"\" };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={this.state.query}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport \"../ImageGalleryItem/ImageGalleryItem.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGalleryItem = ({\r\n  id,\r\n  webformatURL,\r\n  largeImageURL,\r\n  clickOnImage,\r\n}) => (\r\n  <li key={id} className=\"ImageGalleryItem\">\r\n    <img\r\n      src={webformatURL}\r\n      className=\"ImageGalleryItem-image\"\r\n      alt=\"\"\r\n      srcset={largeImageURL}\r\n      onClick={clickOnImage}\r\n    />\r\n  </li>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  clickOnImage: PropTypes.func.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport \"../ImageGallery/ImageGallery.scss\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ImageGallery = ({ images, openModal }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map(({ id, webformatURL, largeImageURL }) => {\r\n      return (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          clickOnImage={openModal}\r\n          largeImageURL={largeImageURL}\r\n        />\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      openModal: PropTypes.func.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport \"../Button/Button.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ loadMore }) => (\r\n  <button className=\"Button\" type=\"button\" onClick={loadMore}>\r\n    Load more\r\n  </button>\r\n);\r\nButton.propTypes = {\r\n  loadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import axios from \"axios\";\r\nconst KEY = \"22137336-626728f8e845457664aa471a0\";\r\n\r\naxios.defaults.baseURL = \"https://pixabay.com\";\r\n\r\nconst fetchImages = ({ searchQuery = \"\", currentPage = 1 }) => {\r\n  return axios\r\n    .get(\r\n      `/api/?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nexport default { fetchImages };\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport \"../Modal/Modal.scss\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    console.log(\"Modal componentDidMount\");\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"Modal componentWillUnmount\");\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      console.log(\"Нажали ESC, нужно закрыть модалку\");\r\n\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button\";\nimport imagesApi from \"./images-api\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./components/Modal\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  static defaultProps = {};\n\n  static propTypes = {\n    //\n  };\n\n  state = {\n    hits: [],\n    currentPage: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    showModal: false,\n    error: null,\n    selectedImage: \"\",\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n  choseModalPic = (event) => {\n    const largePicture = event.currentTarget.srcset;\n    console.log(largePicture);\n    this.setState({ selectedImage: largePicture });\n    console.log(this.state.selectedImage);\n    this.toggleModal();\n  };\n\n  onChangeQuery = (query) => {\n    this.setState({\n      searchQuery: query,\n      currentPage: 1,\n      hits: [],\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true });\n\n    imagesApi\n      .fetchImages(options)\n      .then((hits) => {\n        console.log(hits);\n        this.setState((prevState) => ({\n          hits: [...prevState.hits, ...hits],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { error, hits, isLoading, showModal, selectedImage } = this.state;\n    return (\n      <div className=\"App\">\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={selectedImage} alt=\"\" />\n          </Modal>\n        )}\n        {error && <h1>Ой ошибка, всё пропало!!!</h1>}\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery images={hits} openModal={this.choseModalPic} />\n        {isLoading && (\n          <div className=\"Loader\">\n            <Loader\n              type=\"Puff\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n              timeout={3000} //3 secs\n            />\n          </div>\n        )}\n\n        {hits.length > 0 && !isLoading && (\n          <Button loadMore={this.fetchImages} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}